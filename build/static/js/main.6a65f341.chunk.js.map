{"version":3,"sources":["App.jsx","index.jsx"],"names":["App","identityPoolId","process","AWS","config","region","split","credentials","CognitoIdentityCredentials","IdentityPoolId","useEffect","a","getPromise","mapboxgl","Map","container","center","zoom","style","transformRequest","url","resourceType","includes","Signer","signUrl","access_key","accessKeyId","secret_key","secretAccessKey","session_token","sessionToken","addControl","NavigationControl","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uPAkEeA,G,OA3DH,WAGV,IAAMC,EAAiBC,sDAIvBC,IAAIC,OAAOC,OAASJ,EAAeK,MAAM,KAAK,GAG9C,IAAMC,EAAc,IAAIJ,IAAIK,2BAA2B,CACrDC,eAAgBR,IA2ClB,OArCAS,qBAAU,WACR,sBAAC,sBAAAC,EAAA,sEAEOJ,EAAYK,aAFnB,OAKa,IAAIC,IAASC,IAAI,CAC3BC,UAAW,OACXC,OAAQ,CAAC,OAAQ,OACjBC,KAAM,GACNC,MAvBUhB,aAwBViB,iBAAkB,SAACC,EAAKC,GAMtB,MALqB,UAAjBA,GAA6BD,EAAIE,SAAS,SAE5CF,EAAG,2BAAuBjB,IAAIC,OAAOC,OAAlC,uCAAuEe,EAAvE,sBAGDA,EAAIE,SAAS,iBAER,CACLF,IAAKG,IAAOC,QAAQJ,EAAK,CACvBK,WAAYlB,EAAYmB,YACxBC,WAAYpB,EAAYqB,gBACxBC,cAAetB,EAAYuB,gBAM1B,CAAEV,UAITW,WAAW,IAAIlB,IAASmB,kBAAqB,YAhClD,0CAAD,KAkCC,IAGD,uCCzDJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6a65f341.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\r\n\r\nimport mapboxgl from 'mapbox-gl';\r\nimport AWS from 'aws-sdk';\r\nimport {Signer} from '@aws-amplify/core';\r\nimport 'mapbox-gl/dist/mapbox-gl.css'\r\n\r\nconst App = () => {\r\n\r\n  // configuration\r\n  const identityPoolId = process.env.REACT_APP_IDENTITY_POOL_ID; // Cognito Identity Pool ID\r\n  const mapName = process.env.REACT_APP_MAP_NAME; // Amazon Location Service Map Name\r\n\r\n  // extract the region from the Identity Pool ID\r\n  AWS.config.region = identityPoolId.split(\":\")[0];\r\n\r\n  // instantiate a Cognito-backed credential provider\r\n  const credentials = new AWS.CognitoIdentityCredentials({\r\n    IdentityPoolId: identityPoolId,\r\n  });\r\n\r\n  /**\r\n   * Initialize a map.\r\n   */\r\n  useEffect(() => {\r\n    (async () => {\r\n      // load credentials and set them up to refresh\r\n      await credentials.getPromise();\r\n\r\n      // actually initialize the map\r\n      const map = new mapboxgl.Map({\r\n        container: \"root\",\r\n        center: [139.75, 35.68], // initial map centerpoint\r\n        zoom: 14, // initial map zoom\r\n        style: mapName,\r\n        transformRequest: (url, resourceType) => {\r\n          if (resourceType === \"Style\" && !url.includes(\"://\")) {\r\n            // resolve to an AWS URL\r\n            url = `https://maps.geo.${AWS.config.region}.amazonaws.com/maps/v0/maps/${url}/style-descriptor`;\r\n          }\r\n      \r\n          if (url.includes(\"amazonaws.com\")) {\r\n            // only sign AWS requests (with the signature as part of the query string)\r\n            return {\r\n              url: Signer.signUrl(url, {\r\n                access_key: credentials.accessKeyId,\r\n                secret_key: credentials.secretAccessKey,\r\n                session_token: credentials.sessionToken,\r\n              }),\r\n            };\r\n          }\r\n      \r\n          // don't sign\r\n          return { url };\r\n        },\r\n      });\r\n\r\n      map.addControl(new mapboxgl.NavigationControl(), \"top-left\");\r\n    })()\r\n  }, [])\r\n\r\n  return (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}